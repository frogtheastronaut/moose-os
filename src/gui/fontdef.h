// Basic 8x8 font data - just create a few characters for testing
const uint8_t system_font[256][8] = {
    // Space (32)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    
    // Letters A-Z (65-90) - using offset 65
    [65] = {0x18, 0x24, 0x42, 0x7E, 0x42, 0x42, 0x42, 0x00},  // A
    [66] = {0x7C, 0x22, 0x22, 0x3C, 0x22, 0x22, 0x7C, 0x00},  // B
    [67] = {0x3C, 0x42, 0x40, 0x40, 0x40, 0x42, 0x3C, 0x00},  // C
    [68] = {0x78, 0x24, 0x22, 0x22, 0x22, 0x24, 0x78, 0x00},  // D
    [69] = {0x7E, 0x20, 0x20, 0x3C, 0x20, 0x20, 0x7E, 0x00},  // E
    [70] = {0x7E, 0x20, 0x20, 0x3C, 0x20, 0x20, 0x20, 0x00},  // F
    [71] = {0x3C, 0x42, 0x40, 0x4E, 0x42, 0x42, 0x3C, 0x00},  // G
    [72] = {0x42, 0x42, 0x42, 0x7E, 0x42, 0x42, 0x42, 0x00},  // H
    [73] = {0x3E, 0x08, 0x08, 0x08, 0x08, 0x08, 0x3E, 0x00},  // I
    [74] = {0x0E, 0x04, 0x04, 0x04, 0x44, 0x44, 0x38, 0x00},  // J
    [75] = {0x42, 0x44, 0x48, 0x70, 0x48, 0x44, 0x42, 0x00},  // K
    [76] = {0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7E, 0x00},  // L
    [77] = {0x42, 0x66, 0x5A, 0x42, 0x42, 0x42, 0x42, 0x00},  // M
    [78] = {0x42, 0x62, 0x52, 0x4A, 0x46, 0x42, 0x42, 0x00},  // N
    [79] = {0x3C, 0x42, 0x42, 0x42, 0x42, 0x42, 0x3C, 0x00},  // O
    [80] = {0x7C, 0x42, 0x42, 0x7C, 0x40, 0x40, 0x40, 0x00},  // P
    [81] = {0x3C, 0x42, 0x42, 0x42, 0x4A, 0x44, 0x3A, 0x00},  // Q
    [82] = {0x7C, 0x42, 0x42, 0x7C, 0x48, 0x44, 0x42, 0x00},  // R
    [83] = {0x3C, 0x42, 0x40, 0x3C, 0x02, 0x42, 0x3C, 0x00},  // S
    [84] = {0x7F, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00},  // T
    [85] = {0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x3C, 0x00},  // U
    [86] = {0x42, 0x42, 0x42, 0x42, 0x42, 0x24, 0x18, 0x00},  // V
    [87] = {0x42, 0x42, 0x42, 0x5A, 0x5A, 0x66, 0x42, 0x00},  // W
    [88] = {0x42, 0x42, 0x24, 0x18, 0x24, 0x42, 0x42, 0x00},  // X
    [89] = {0x41, 0x41, 0x22, 0x14, 0x08, 0x08, 0x08, 0x00},  // Y
    [90] = {0x7F, 0x02, 0x04, 0x08, 0x10, 0x20, 0x7F, 0x00},  // Z
    
    // Numbers 0-9 (48-57)
    // Add forward slash (47) to the font definition
    [47] = {0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x00},  // /
    [48] = {0x3C, 0x42, 0x46, 0x4A, 0x52, 0x62, 0x3C, 0x00},  // 0
    [49] = {0x08, 0x18, 0x28, 0x08, 0x08, 0x08, 0x3E, 0x00},  // 1
    [50] = {0x3C, 0x42, 0x02, 0x0C, 0x30, 0x40, 0x7E, 0x00},  // 2
    [51] = {0x3C, 0x42, 0x02, 0x0C, 0x02, 0x42, 0x3C, 0x00},  // 3
    [52] = {0x04, 0x0C, 0x14, 0x24, 0x44, 0x7E, 0x04, 0x00},  // 4
    [53] = {0x7E, 0x40, 0x7C, 0x02, 0x02, 0x42, 0x3C, 0x00},  // 5
    [54] = {0x1C, 0x20, 0x40, 0x7C, 0x42, 0x42, 0x3C, 0x00},  // 6
    [55] = {0x7E, 0x02, 0x04, 0x08, 0x10, 0x20, 0x20, 0x00},  // 7
    [56] = {0x3C, 0x42, 0x42, 0x3C, 0x42, 0x42, 0x3C, 0x00},  // 8
    [57] = {0x3C, 0x42, 0x42, 0x3E, 0x02, 0x04, 0x38, 0x00},  // 9
    
    // ! (33)
    [33] = {0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x08, 0x00},
    
    // Basic punctuation
    [44] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x10},  // ,
    [46] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00},  // .
    
    // Lowercase letters a-z (97-122)
    [97] = {0x00, 0x00, 0x38, 0x04, 0x3C, 0x44, 0x3C, 0x00},  // a
    [98] = {0x40, 0x40, 0x58, 0x64, 0x44, 0x44, 0x78, 0x00},  // b
    [99] = {0x00, 0x00, 0x38, 0x44, 0x40, 0x44, 0x38, 0x00},  // c
    [100] = {0x04, 0x04, 0x34, 0x4C, 0x44, 0x44, 0x3C, 0x00},  // d
    [101] = {0x00, 0x00, 0x38, 0x44, 0x7C, 0x40, 0x38, 0x00},  // e
    [102] = {0x0C, 0x12, 0x10, 0x38, 0x10, 0x10, 0x10, 0x00},  // f
    [103] = {0x00, 0x00, 0x3C, 0x44, 0x44, 0x3C, 0x04, 0x38},  // g
    [104] = {0x40, 0x40, 0x58, 0x64, 0x44, 0x44, 0x44, 0x00},  // h
    [105] = {0x08, 0x00, 0x18, 0x08, 0x08, 0x08, 0x1C, 0x00},  // i
    [106] = {0x04, 0x00, 0x0C, 0x04, 0x04, 0x04, 0x44, 0x38},  // j
    [107] = {0x40, 0x40, 0x44, 0x48, 0x70, 0x48, 0x44, 0x00},  // k
    [108] = {0x18, 0x08, 0x08, 0x08, 0x08, 0x08, 0x1C, 0x00},  // l
    [109] = {0x00, 0x00, 0x6C, 0x92, 0x92, 0x92, 0x92, 0x00},  // m
    [110] = {0x00, 0x00, 0x58, 0x64, 0x44, 0x44, 0x44, 0x00},  // n
    [111] = {0x00, 0x00, 0x38, 0x44, 0x44, 0x44, 0x38, 0x00},  // o
    [112] = {0x00, 0x00, 0x78, 0x44, 0x44, 0x78, 0x40, 0x40},  // p
    [113] = {0x00, 0x00, 0x3C, 0x44, 0x44, 0x3C, 0x04, 0x06},  // q
    [114] = {0x00, 0x00, 0x58, 0x64, 0x44, 0x40, 0x40, 0x00},  // r
    [115] = {0x00, 0x00, 0x38, 0x40, 0x38, 0x04, 0x78, 0x00},  // s
    [116] = {0x10, 0x10, 0x38, 0x10, 0x10, 0x12, 0x0C, 0x00},  // t
    [117] = {0x00, 0x00, 0x44, 0x44, 0x44, 0x4C, 0x34, 0x00},  // u
    [118] = {0x00, 0x00, 0x44, 0x44, 0x28, 0x28, 0x10, 0x00},  // v
    [119] = {0x00, 0x00, 0x44, 0x44, 0x54, 0x54, 0x28, 0x00},  // w
    [120] = {0x00, 0x00, 0x44, 0x28, 0x10, 0x28, 0x44, 0x00},  // x
    [121] = {0x00, 0x00, 0x44, 0x44, 0x44, 0x3C, 0x04, 0x38},  // y
    [122] = {0x00, 0x00, 0x7C, 0x08, 0x10, 0x20, 0x7C, 0x00},  // z
    
    // Additional common symbols
    [32] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},   // Space
    [58] = {0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00},   // :
    [59] = {0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x08, 0x10},   // ;
    [33] = {0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x08, 0x00},   // !
    [63] = {0x38, 0x44, 0x04, 0x08, 0x10, 0x00, 0x10, 0x00},   // ?
    [34] = {0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},   // "
    [39] = {0x08, 0x08, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00},   // '
    [40] = {0x04, 0x08, 0x10, 0x10, 0x10, 0x08, 0x04, 0x00},   // (
    [41] = {0x20, 0x10, 0x08, 0x08, 0x08, 0x10, 0x20, 0x00},   // )
    [45] = {0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00},   // -
    [61] = {0x00, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x00, 0x00},   // =
};

// Character widths for proportional spacing (values 0-8)
const uint8_t char_widths[256] = {
    // Default width (for undefined characters)
    [0 ... 255] = 6,
    
    // Space is narrower than other characters
    [32] = 4,
    
    // Punctuation
    [33] = 3, // !
    [34] = 5, // "
    [39] = 3, // '
    [44] = 3, // ,
    [46] = 3, // .
    [58] = 3, // :
    [59] = 3, // ;
    
    // Numbers - consistent width
    // Add width for forward slash
    [47] = 5, // /
    [48 ... 57] = 6, // 0-9
    
    // Uppercase letters - variable widths
    [65] = 6, // A
    [66] = 6, // B
    [67] = 6, // C
    [68] = 6, // D
    [69] = 6, // E
    [70] = 6, // F
    [71] = 6, // G
    [72] = 6, // H
    [73] = 3, // I
    [74] = 5, // J
    [75] = 6, // K
    [76] = 5, // L
    [77] = 7, // M
    [78] = 6, // N
    [79] = 6, // O
    [80] = 6, // P
    [81] = 6, // Q
    [82] = 6, // R
    [83] = 6, // S
    [84] = 6, // T
    [85] = 6, // U
    [86] = 6, // V
    [87] = 7, // W
    [88] = 6, // X
    [89] = 6, // Y
    [90] = 6, // Z
    
    // Lowercase letters - variable widths
    [97] = 6,  // a
    [98] = 6,  // b
    [99] = 5,  // c
    [100] = 6, // d
    [101] = 5, // e
    [102] = 4, // f
    [103] = 6, // g
    [104] = 6, // h
    [105] = 2, // i
    [106] = 3, // j
    [107] = 5, // k
    [108] = 2, // l
    [109] = 7, // m
    [110] = 6, // n
    [111] = 6, // o
    [112] = 6, // p
    [113] = 6, // q
    [114] = 5, // r
    [115] = 5, // s
    [116] = 4, // t
    [117] = 6, // u
    [118] = 6, // v
    [119] = 7, // w
    [120] = 5, // x
    [121] = 6, // y
    [122] = 5, // z
};